name: Lighthouse CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for GitHub Pages deployment
        if: github.event_name == 'push'
        run: sleep 60
        
      - name: Run Lighthouse CI
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://edgafner.github.io
            https://edgafner.github.io/azdlib.html
            https://edgafner.github.io/gbrowserlib.html
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: Format and comment PR results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const links = ${{ steps.lighthouse.outputs.links }}
            const manifest = ${{ steps.lighthouse.outputs.manifest }}
            
            let comment = '### Lighthouse Performance Results\n\n'
            
            if (manifest && manifest.length > 0) {
              comment += '| Page | Performance | Accessibility | Best Practices | SEO | Report |\n'
              comment += '|------|------------|---------------|----------------|-----|--------|\n'
              
              manifest.forEach((result) => {
                const scores = result.summary
                const url = result.url
                const report = links[url] || '#'
                
                comment += `| ${url} | ${Math.round(scores.performance * 100)} | ${Math.round(scores.accessibility * 100)} | ${Math.round(scores['best-practices'] * 100)} | ${Math.round(scores.seo * 100)} | [View](${report}) |\n`
              })
            } else {
              comment += 'Lighthouse results will be available after the action completes.\n'
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })