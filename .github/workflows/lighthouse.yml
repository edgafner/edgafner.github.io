name: Lighthouse CI

on:
  # Only run after successful deployment
  workflow_run:
    workflows: ["Build documentation"]
    types:
      - completed
    branches: [ main ]
  # Manual trigger for testing
  workflow_dispatch:

jobs:
  lighthouse:
    # Only run if the triggering workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for GitHub Pages to be fully deployed
        run: |
          echo "Waiting for GitHub Pages to be fully deployed..."
          max_attempts=20
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Checking deployment status (attempt $attempt/$max_attempts)..."
            
            # Check if the main page is accessible
            if curl -f -s -o /dev/null -w "%{http_code}" https://edgafner.github.io | grep -q "200"; then
              echo "Site is live! Waiting additional 30s for CDN propagation..."
              sleep 30
              break
            fi
            
            if [ $attempt -eq $max_attempts ]; then
              echo "Site not accessible after $max_attempts attempts"
              exit 1
            fi
            
            echo "Site not ready yet, waiting 15 seconds..."
            sleep 15
            attempt=$((attempt + 1))
          done
        
      - name: Run Lighthouse CI
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://edgafner.github.io
            https://edgafner.github.io/azdlib.html
            https://edgafner.github.io/gbrowserlib.html
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: Format results summary
        if: always()
        run: |
          echo "## Lighthouse Performance Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d .lighthouseci ]; then
            echo "| Page | Performance | Accessibility | Best Practices | SEO |" >> $GITHUB_STEP_SUMMARY
            echo "|------|------------|---------------|----------------|-----|" >> $GITHUB_STEP_SUMMARY
            
            for report in .lighthouseci/lhr-*.json; do
              if [ -f "$report" ]; then
                url=$(jq -r '.finalUrl' "$report")
                perf=$(jq -r '.categories.performance.score * 100 | floor' "$report")
                a11y=$(jq -r '.categories.accessibility.score * 100 | floor' "$report")
                bp=$(jq -r '.categories["best-practices"].score * 100 | floor' "$report")
                seo=$(jq -r '.categories.seo.score * 100 | floor' "$report")
                
                echo "| ${url#https://} | $perf | $a11y | $bp | $seo |" >> $GITHUB_STEP_SUMMARY
              fi
            done
          else
            echo "No Lighthouse results found" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Save Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 30
          
      - name: Create issue with results
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Lighthouse Performance Alert';
            const body = `## Lighthouse CI Failed
            
            The latest Lighthouse performance tests have failed. This could indicate:
            - Performance regressions
            - Accessibility issues
            - SEO problems
            
            Check the [workflow run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}) for details.
            
            **Triggered by:** ${context.eventName === 'workflow_dispatch' ? 'Manual run' : 'Documentation deployment'}
            **Commit:** ${context.sha}
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['performance', 'automated']
            })