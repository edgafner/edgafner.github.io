<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Pull Request Review" id="Pull-Request-Details">
    <primary-label ref="azd"/>
    <secondary-label ref="azd_version"/>
    <chapter title="Pull Request Timeline" id="pull_request_timeline">
        <p>When it comes to reviewing code changes, the pull request timeline is an essential tool for tracking the
            progression of a pull request.</p>
        <p>
            The timeline provides a chronological overview of significant events and interactions within a pull request.
            It's
            a key
            tool for tracking
            the progress, understanding the history, and identifying areas of discussion or contention in a pull
            request.</p>

        <procedure id="1procedure0">
            <step><p>Accessing the Timeline</p>
                <list>
                    <li><p>Open a pull request to view its details.</p></li>
                    <li><p>Navigate to the 'Timeline' file editor.</p></li>
                </list>
            </step>
            <step>
                <p>Understanding Timeline Entries</p>
                <p>The timeline will display a variety of events, including:</p>
                <list type="bullet">
                    <li><p>Comments and replies made by reviewers and contributors.</p>
                    </li>
                    <li><p>Commits added or associated with the pull request.</p></li>
                    <li><p>Status updates, such as when a pull request is opened, reviewed, or merged.</p></li>
                    <li><p>System notifications, like CI/CD results or automated checks.</p></li>
                    <li><p>Manual events like label additions or changes in assignees.</p></li>
                </list>
            </step>
            <step>
                <p>Interacting with Timeline Entries</p>
                <list>
                    <li><p>You can click on specific timeline entries to view more details or jump to related files or
                        discussions.</p></li>
                    <li><p>Some entries allow for direct interaction, like replying to comments or viewing commit
                        diffs.</p></li>
                </list>
                <p>The pull request timeline is an invaluable tool for staying updated on the progression and
                    discussions
                    surrounding your
                    code changes.</p>
            </step>
        </procedure>
    </chapter>
    <chapter title="Pull Request Status" id="pull_request_status">
        <p>When you are reviewing a pull request, you can see the status of the pull request in the Pull Requests tool
            window.</p>
        <p>The status of a pull request is displayed based on the checks that are configured in the Azure DevOps
            repository.</p>
        <p>For example, you can see the following statuses:</p>
        <list>
            <li><p>Build and Check status</p>
                <p>An Action link is attached to this status when clicked a clickable list of Azure DevOps pipelines is
                    presented. Click on one of them to open them in the browser.</p>
            </li>
            <li><p>Static checks and validation results</p>
                <p>The latest version now shows static code analysis results and validation checks directly in the PR
                    details tab,
                    allowing you to quickly identify and address issues without leaving the IDE.</p>
            </li>
            <li><p>Work Items linked to the pull request</p>
                <p>If your Project's admin has set a blocking merge for unlinked work items, you will see an error in
                    the
                    pull request status.</p>
                <tip><p>Right-click on the opened Pull request and select the link work items option to link work items
                    to the
                    pull request.</p>
                    <img src="link_work_item.png" alt="link_work_item"/>
                </tip>
            </li>
            <li><p>Reviewers votes</p></li>
            <li><p>Other statuses</p></li>
        </list>

    </chapter>

    <chapter title="Review Actions" id="review-actions">
        <p>
            With AZD you can review a Pull Request without leaving your IDE. It lets you do all the following:
        </p>
        <deflist collapsible="true">
            <def title="Comment Actions" id="comment">
                <p>Comment on a change made by the author, or comment on the Pull Request as a whole.<br/>
                    <img src="commentPRLevel.png" alt="comment-on-pr" style="block" border-effect="line"/>
                    You can reply, edit, delete your comments, or thumb up the comments left by others.
                </p>
                <p>You can resolve a comment with all the statuses comment supported in Azure DevOps.</p>
                <p>New features in the latest version:</p>
                <list>
                    <li>
                        <p><b>Attach images to comments:</b> You can now attach images directly to your comments right
                            from the IDE, making it easier to provide visual context for your feedback.</p>
                        <img src="attachimagecomment.png" alt="attachimagecomment.png"/>
                    </li>
                    <li>
                        <p><b>Fix/Polish comment grammar with AI:</b> Before posting a comment, you can use AI to check
                            and improve the grammar and clarity of your comment text, ensuring your feedback is
                            professional and easy to understand.</p>
                    </li>
                </list>
                <note>
                    Version 2024.3.1+ you can also mention a user in your comment.
                </note>
            </def>
            <def title="Vote Actions" id="vote">
                <p>Approve, Approve with suggestions, Reset your vote, Wait for changes, or Reject the Pull
                    Request.<br/>
                </p>
                <img src="vote_status_options.png" alt="approve-reject"/>
            </def>
            <def title="Request Review Actions" id="request-review">
                <p>Request a review from a specific reviewer or from all reviewers.<br/>
                </p>
                <img src="request-review.png" alt="request-review"/>
            </def>
            <def title="Merge Actions" id="merge">
                <p>Merge, Rebase, Squash the Pull Request, or close it without merging.<br/>
                    <img src="merge_operations.png" alt="merge-pr" style="block" theme="dark"
                         border-effect="line"/> <br/>
                    You can also delete the source branch after merging,
                    edit the merge commit message, and choose to close associated work items.
                </p>

                <note>From version 2024.3.8, you can set Auto Complete with setting the Merge strategy
                    following the same capability as in the Azure DevOps portal
                    <img src="set-auto-complete.png" alt="set-auto-complete" border-effect="line"/>
                </note>
            </def>
            <def title="Publish Draft Actions" id="publish-draft">
                <p>When you are ready to share your draft Pull Request, you can publish it to make it visible to others.
                    You can also go the other way around and save a published Pull Request as a draft.
                </p>
                <img src="publish_draft_actions.png" alt="publish-draft"/>
            </def>
            <def title="Description Actions" id="description">
                <p>Edit the description of the Pull Request or add a description if it's missing.
                </p>
                When creating the PR from the IDE, AZD is filling the description with the commit messages.
                You can edit the description before triggering the PR creation.
            </def>

        </deflist>
    </chapter>
    <chapter title="View and apply the suggested changes" id="view_and_apply_changes">
        <p>If the maintainers of the original repository left comments or made suggestions with regard to your changes,
            you
            can view and apply them directly from Jetbrains' IDEA.</p>
        <procedure id="1procedure0-1">
            <step>
                <p>In the main menu, go to
                    <ui-path>Git | Azure DevOps | View Pull Requests</ui-path>.
                </p>
            </step>
            <step>
                <p>In the list of pull requests, select the one you want to work with and double-click it.</p>
                <p>The IDE opens an overview of the selected pull request.
                    <img src="view_and_apply_single_pr.png" alt="view_and_apply_single_pr" style="block"
                         thumbnail="true"/>
                </p>
                <list>
                    <li><p>Next to the title, there is the pull request id number. Click it if you want to open the pull
                        request
                        on
                        Azure DevOps.</p></li>
                    <li>
                        <p>Click the
                            <ui-path>View Timeline</ui-path>
                            button to open the pull request timeline.
                        </p>
                    </li>
                    <li>
                        <p>To filter the list of changed files, select the commit you want to investigate in
                            <ui-path>Changes from</ui-path>.
                        </p>
                    </li>
                    <li><p>Right-click any file to open the context menu for this file.</p></li>
                    <li><p>In case a reviewer has left any comments or suggestions, there is a counter with the number
                        of comments
                        in the list of files.</p></li>
                </list>
            </step>
            <step>
                <p>Double-click a file to view the suggested changes and comments.</p>
            </step>
            <step>
                <p>You can either resolve a comment, reply to it or add or remove a Like emoji <img src="like.svg"
                                                                                                    alt="like"/>.

                    <img src="comment_in_editor_diff.png" alt="comment_in_editor_diff" style="block"/>
                </p>
                <p>If you are the comment author, you can
                    <ui-path>Edit</ui-path>
                    or
                    <ui-path>Delete</ui-path>
                    the comment as well.
                </p>
            </step>
            <step>
                <p>If the reviewer has left a suggestion, you'll see the diff between your code and the suggested one
                    and
                    can either
                    Apply locally (applies a patch to the working copy) or Commit (opens a commit message pop-up).
                    <img src="apply_suggestion_diff_editor.png" alt="apply_suggestion_diff_editor" style="block"/>
                </p>
                <note><p>The Suggestion feature is available only in case the current branch is the same as the source
                    branch of
                    the pull request.
                </p></note>
            </step>
            <step>
                <p>After you finished working on the pull request, you can re-request review, vote by approving or
                    rejecting the
                    pull request, merge the pull request, or close it.
                    <img src="vote_status_options.png" alt="vote_status_options" style="block"/>
                </p>
            </step>
        </procedure>
    </chapter>


</topic>
